install.packages("revealjs")
## RNA Biology -  The Central Dogma
rjs_twocol
library(knitr)
library(tidyverse)
include_graphics('src/dna_central_dogma_yourgenome.png')
include_graphics('src/rna_isoforms.gif')
library(knitr)
library(tidyverse)
opts_chunk$set(echo = F)
include_graphics('src/rnaseq_lib_prep.png')
read.table(text = txt)
txt <- 'Name    Length  EffectiveLength TPM     NumReads
DNTX_00000017   12501   9261.044        2.532237        2529.632
DNTX_00000019   3218    1783.769        12.960541       2493.762
DNTX_00000020   39670   27993.255       1.370513        4138.375
DNTX_00000018   26868   17512.212       2.156619        4073.875
DNTX_00000034   12032   7527.305        0.713575        579.392
DNTX_00000033   8417    6031.772        0.725138        471.801
DNTX_00000035   3349    1579.033        3.459229        589.201'
read.table(text = txt)
read.table(text = txt ) %>% kable
read.table(text = txt ) %>% kable(col.names = F)
?kable
read.table(text = txt ) %>% kable(col.names = '')
read.table(text = txt, header = T ) %>% kable(col.names = '')
read.table(text = txt, header = T ) %>% kable()
library(tximport)
?require
?tximport
library(knitr)
library(tidyverse)
opts_chunk$set(echo = F)
opts_knit$set(root.dir = '/data/swamyvs/BIOF045-NGS-Data-Analysis-Day-3/')
library("tximport")
library("readr")
library("tximportData")
BiocManager::install("tximportData")
library("tximportData")
library("tximport")
library("readr")
library("tximportData")
library("DESeq2")
BiocManager::install('DESeq2')
library("tximport")
library("readr")
library("tximportData")
library("DESeq2")
library("tximport")
library("readr")
library("tximportData")
library("DESeq2")
dir <- system.file("extdata", package="tximportData")
samples <- read.table(file.path(dir,"samples.txt"), header=TRUE)
samples$condition <- factor(rep(c("A","B"),each=3))
rownames(samples) <- samples$run
samples[,c("pop","center","run","condition")]
files <- file.path(dir,"salmon", samples$run, "quant.sf.gz")
names(files) <- samples$run
tx2gene <- read_csv(file.path(dir, "tx2gene.gencode.v27.csv"))
txi <- tximport(files, type="salmon", tx2gene=tx2gene)
ddsTxi <- DESeqDataSetFromTximport(txi,
colData = samples,
design = ~ condition)
sample_table$treatment
samples
samples$condition
ddsTxi <- DESeqDataSetFromTximport(txi,
colData = samples,
design = ~ condition)
exp <- tibble(Condition = c(rep('wt', 3), rep('ko', 3)),
Replicate = c(rep(1:3, 2)),
Gene_A = rnorm(6, 1))
exp2 <-  tibble(Condition = c(rep('wt', 3), rep('ko', 3)),
Replicate = c(rep(1:3, 2)),
Gene_A = rnorm(6, 1),
Gene_B = rnorm(6, 1))
exp
exp2
plotPCA(ddsTxi)
ddsTxi
dds <- DESeq(ddsTxi)
class(dds)
class(ddsTxi)
dds$assay
dds$pop
dds@rowRanges
dds@assays$`.->data`$counts
class(ddsTxi)
assay(ddsTxi)
head( assay(ddsTxi))
dds <- DESeq(ddsTxi)
message("estimating size factors
using 'avgTxLength' from assays(dds), correcting for library size")
?DESeq
## Estimating Dispersions
```{r, echo = F}
message('estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
final dispersion estimates')
```
- This is basically accounting for technical variability between expression of individual genes(its actually lot more complicated than that but beyond the scope of this course)
- for a more through explanation, see the documentation for the `estimateDispersions`
minimally_expressed <- rowSums(ddsTxi) >=10
minimally_expressed <- rowSums(assay(ddsTxi)) >=10
ddsTxi <- ddsTxi[minimally_expressed,]
dim(ddsTxi)
ddsTxi <- DESeqDataSetFromTximport(txi,
colData = samples,
design = ~ condition, )
dim(ddsTxi)
minimally_expressed <- rowSums(assay(ddsTxi)) >=10
ddsTxi_filtered <- ddsTxi[minimally_expressed,]
dim(ddsTxi_filtered)
minimally_expressed <- rowSums(assay(ddsTxi)) >=25
ddsTxi_filtered <- ddsTxi[minimally_expressed,]
dim(ddsTxi_filtered)
dds <- estimateSizeFactors(ddsTxi_filtered)
dds <- estimateDispersions(dds)
plotPCA(dds)
?plotPCA
rlds <- rlog(dds)
plotPCA(rlds)
library(ggplot2)
ggplot(df) +
geom_point(aes(x=x, y=y, color = condition))
df <- tibble(x=c(-7, 3, -1, 10),
y=c(-1,-2, 2, 1 ),
condition = c('a', 'a', 'b', 'b'))
ggplot(df) +
geom_point(aes(x=x, y=y, color = condition))
geom_point(aes(x=y, y=x, color = condition)) +
ggplot(df) +
geom_point(aes(x=y, y=x, color = condition)) +
xlab('PC1 45% variance explained') +
ylab('PC2 30% variance explained')
ggplot(df) +
geom_point(aes(x=y, y=x, color = condition)) +
xlab('PC1 45% variance explained') +
ylab('PC2 30% variance explained')
library(knitr)
library(tidyverse)
#opts_chunk$set(echo = F, fig.height = 5, fig.width = 5)
opts_knit$set(root.dir = '/data/swamyvs/BIOF045-NGS-Data-Analysis-Day-3/')
suppressMessages(library(ComplexHeatmap))
cor_mat <- rld %>% assay %>% t %>% cor( method = 'spearman')
cor_mat <- rlds %>% assay %>% t %>% cor( method = 'spearman')
# this is the same as cor(t(assay(rld)))
Heatmap(cor_mat)
cor_mat <- rlds %>% assay %>% cor( method = 'spearman')
# this is the same as cor(assay(rld))
Heatmap(cor_mat)
suppressMessages(library(pheatmap))
# this is the same as cor(assay(rld))
pheatmap(cor_mat ,grid.text(sprintf("%.1f", small_mat[i, j]), x, y, gp = gpar(fontsize = 10))
# this is the same as cor(assay(rld))
pheatmap(cor_mat )
# this is the same as cor(assay(rld))
pheatmap(cor_mat, display_numbers = T)
sample_table
View(cor_mat)
View(samples)
?pheatmap
# this is the same as cor(assay(rld))
pheatmap(cor_mat, display_numbers = T, annotation_row = samples)
# this is the same as cor(assay(rld))
pheatmap(cor_mat, display_numbers = T, annotation_row = samples[,'condition'])
samples[,'condition']
# this is the same as cor(assay(rld))
pheatmap(cor_mat, display_numbers = T, annotation_row = samples %>% select(condition))
# this is the same as cor(assay(rld))
pheatmap(cor_mat, display_numbers = T,
number_format='%.2f', annotation_row = samples %>% select(condition))
# this is the same as cor(assay(rld))
pheatmap(cor_mat, display_numbers = T,
number_format='%.4f', annotation_row = samples %>% select(condition))
# this is the same as cor(assay(rld))
pheatmap(cor_mat,
display_numbers = T,
number_format='%.4f',
annotation_row = samples %>% select(condition))
